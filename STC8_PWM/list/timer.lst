C51 COMPILER V9.00   TIMER                                                                 04/24/2018 21:39:19 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\list\timer.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE timer.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\timer.l
                    -st) OBJECT(.\list\timer.obj)

line level    source

   1          #include        "USART1.h"
   2          #include        "timer.h"
   3          
   4          u16             PWM_x,PWM_y;
   5          int     stop_x,stop_y;
   6          
   7          /********************* Timer0中断函数************************/
   8          void timer0_int (void) interrupt TIMER0_VECTOR
   9          {
  10   1                      if(stop_x == 0)
  11   1                      {       
  12   2                              P_PWM_X=!P_PWM_X;
  13   2      
  14   2                      }
  15   1                      TH0 = PWM_x/256;        
  16   1                      TL0 = PWM_x%256;
  17   1      
  18   1      }
  19          
  20          /********************* Timer1中断函数************************/
  21          void timer1_int (void) interrupt TIMER1_VECTOR
  22          {
  23   1                      if(stop_y == 0)
  24   1                      {
  25   2                              P_PWM_Y=!P_PWM_Y;
  26   2      
  27   2                      }
  28   1                      TH1 = PWM_y/256;        
  29   1                      TL1 = PWM_y%256;
  30   1              
  31   1              
  32   1      }
  33          
  34          /********************* Timer2中断函数************************/
  35          void timer2_int (void) interrupt TIMER2_VECTOR
  36          {
  37   1      
  38   1      }
  39          
  40          
  41          //========================================================================
  42          // 函数: u8   Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  43          // 描述: 定时器初始化程序.
  44          // 参数: TIMx: 结构参数,请参考timer.h里的定义.
  45          // 返回: 成功返回0, 空操作返回1,错误返回2.
  46          // 版本: V1.0, 2012-10-22
  47          //========================================================================
  48          u8      Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  49          {
  50   1              if(TIM > Timer2)        return 1;       //空操作
  51   1      
  52   1              if(TIM == Timer0)
  53   1              {
  54   2                      TR0 = 0;                //停止计数
C51 COMPILER V9.00   TIMER                                                                 04/24/2018 21:39:19 PAGE 2   

  55   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET0 = 1;        //允许中断
  56   2                      else                                                                    ET0 = 0;        //禁止中断
  57   2                      if(TIMx->TIM_Polity == PolityHigh)              PT0 = 1;        //高优先级中断
  58   2                      else                                                                    PT0 = 0;        //低优先级中断
  59   2                      if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2;       //错误
  60   2                      TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8
             -位自动重装, 3: 16位自动重装, 不可屏蔽中断
  61   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x80;  //12T
  62   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x80;  //1T
  63   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x04;  //对外计数或分频
  64   2                      else                                                                            TMOD &= ~0x04;  //定时
  65   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;      //输出时钟
  66   2                      else                                                    INT_CLKO &= ~0x01;      //不输出时钟
  67   2                      
  68   2                      TH0 = (u8)(TIMx->TIM_Value >> 8);
  69   2                      TL0 = (u8)TIMx->TIM_Value;
  70   2                      if(TIMx->TIM_Run == ENABLE)     TR0 = 1;        //开始运行
  71   2                      return  0;              //成功
  72   2              }
  73   1      
  74   1              if(TIM == Timer1)
  75   1              {
  76   2                      TR1 = 0;                //停止计数
  77   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET1 = 1;        //允许中断
  78   2                      else                                                                    ET1 = 0;        //禁止中断
  79   2                      if(TIMx->TIM_Polity == PolityHigh)              PT1 = 1;        //高优先级中断
  80   2                      else                                                                    PT1 = 0;        //低优先级中断
  81   2                      if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2;       //错误
  82   2                      TMOD = (TMOD & ~0x30) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8
             -位自动重装
  83   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x40;  //12T
  84   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x40;  //1T
  85   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x40;  //对外计数或分频
  86   2                      else                                                                            TMOD &= ~0x40;  //定时
  87   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;      //输出时钟
  88   2                      else                                                    INT_CLKO &= ~0x02;      //不输出时钟
  89   2                      
  90   2                      TH1 = (u8)(TIMx->TIM_Value >> 8);
  91   2                      TL1 = (u8)TIMx->TIM_Value;
  92   2                      if(TIMx->TIM_Run == ENABLE)     TR1 = 1;        //开始运行
  93   2                      return  0;              //成功
  94   2              }
  95   1      
  96   1              if(TIM == Timer2)               //Timer2,固定为16位自动重装, 中断无优先级
  97   1              {
  98   2                      AUXR &= ~(1<<4);        //停止计数
  99   2                      if(TIMx->TIM_Interrupt == ENABLE)                       IE2  |=  (1<<2);        //允许中断
 100   2                      else                                                                            IE2  &= ~(1<<2);        //禁止中断
 101   2                      if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)        return 2;
 102   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~(1<<2);        //12T
 103   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  (1<<2);        //1T
 104   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        AUXR |=  (1<<3);        //对外计数或分频
 105   2                      else                                                                            AUXR &= ~(1<<3);        //定时
 106   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;      //输出时钟
 107   2                      else                                                    INT_CLKO &= ~0x04;      //不输出时钟
 108   2      
 109   2                      TH2 = (u8)(TIMx->TIM_Value >> 8);
 110   2                      TL2 = (u8)TIMx->TIM_Value;
 111   2                      if(TIMx->TIM_Run == ENABLE)     AUXR |=  (1<<4);        //开始运行
 112   2                      return  0;              //成功
 113   2              }
 114   1              return 2;       //错误
C51 COMPILER V9.00   TIMER                                                                 04/24/2018 21:39:19 PAGE 3   

 115   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    452    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
